.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "UMLS::Similarity::zhong 3"
.TH UMLS::Similarity::zhong 3 "2015-08-27" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
UMLS::Similarity::zhong \- Perl module for computing semantic relatedness
of concepts in the Unified Medical Language System (UMLS) using the 
method described by Zhong, et al 2002.
.SH "CITATION"
.IX Header "CITATION"
.Vb 7
\& @inproceedings{ZhongZLY02, 
\&  title={{Conceptual graph matching for semantic search}}, 
\&  author={Zhong, J. and Zhu, H. and Li, J. and Yu, Y. }, 
\&  booktitle={Proceedings of the 10th International Conference on Conceptual Structures},
\&   year={2002},
\&  pages={92\-\-106}
\& }
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use UMLS::Interface;
\&  use UMLS::Similarity::zhong;
\&
\&  my $umls = UMLS::Interface\->new(); 
\&  die "Unable to create UMLS::Interface object.\en" if(!$umls);
\&
\&  my $zhong = UMLS::Similarity::zhong\->new($umls);
\&  die "Unable to create measure object.\en" if(!$zhong);
\&
\&  my $cui1 = "C0005767";
\&  my $cui2 = "C0007634";
\&
\&  $ts1 = $umls\->getTermList($cui1);
\&  my $term1 = pop @{$ts1};
\&
\&  $ts2 = $umls\->getTermList($cui2);
\&  my $term2 = pop @{$ts2};
\&
\&  my $value = $zhong\->getRelatedness($cui1, $cui2);
\&
\&  print "The similarity between $cui1 ($term1) and $cui2 ($term2) is $value\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Zhong et al measure calculates relatedness by considering the 
depths of the two concepts in the \s-1UMLS,\s0 along with the depth of the 
\&\s-1LCS. \s0 The formula is score = 2*m(lcs) / (m(s1) + m(s2)), where 
m(s) = 1 / k**(depth(c)+1). Since this is a distance score, we 
return its recipricol.
.SH "USAGE"
.IX Header "USAGE"
The semantic relatedness modules in this distribution are built as classes
that expose the following methods:
  \fInew()\fR
  \fIgetRelatedness()\fR
.SH "TYPICAL USAGE EXAMPLES"
.IX Header "TYPICAL USAGE EXAMPLES"
To create an object of the zhong measure, we would have the following
lines of code in the perl program.
.PP
.Vb 2
\&   use UMLS::Similarity::zhong;
\&   $measure = UMLS::Similarity::zhong\->new($interface);
.Ve
.PP
The reference of the initialized object is stored in the scalar
variable '$measure'. '$interface' contains an interface object that
should have been created earlier in the program (UMLS-Interface).
.PP
If the 'new' method is unable to create the object, '$measure' would 
be undefined.
.PP
To find the semantic relatedness of the concept 'blood' (C0005767) and
the concept 'cell' (C0007634) using the measure, we would write
the following piece of code:
.PP
.Vb 1
\&   $relatedness = $measure\->getRelatedness(\*(AqC0005767\*(Aq, \*(AqC0007634\*(Aq);
.Ve
.SH "CONFIGURATION OPTION"
.IX Header "CONFIGURATION OPTION"
The UMLS-Interface package takes a configuration file to determine 
which sources and relations to use when obtaining the path information.
.PP
The format of the configuration file is as follows:
.PP
\&\s-1SAB ::\s0 <include|exclude> <source1, source2, ... sourceN>
.PP
\&\s-1REL ::\s0 <include|exclude> <relation1, relation2, ... relationN>
.PP
For example, if we wanted to use the \s-1MSH\s0 vocabulary with only 
the \s-1RB/RN\s0 relations, the configuration file would be:
.PP
\&\s-1SAB ::\s0 include \s-1MSH
REL ::\s0 include \s-1RB, RN\s0
.PP
or
.PP
\&\s-1SAB ::\s0 include \s-1MSH
REL ::\s0 exclude \s-1PAR, CHD\s0
.PP
If you go to the configuration file directory, there will 
be example configuration files for the different runs that 
you have performed.
.PP
For more information about the configuration options please 
see the \s-1README.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), UMLS::Interface
.PP
\&\fIperl\fR\|(1), \fIUMLS::Similarity\fR\|(3)
.SH "CONTACT US"
.IX Header "CONTACT US"
.Vb 2
\&  If you have any trouble installing and using UMLS\-Similarity, 
\&  please contact us via the users mailing list :
\&
\&      umls\-similarity@yahoogroups.com
\&
\&  You can join this group by going to:
\&
\&      http://tech.groups.yahoo.com/group/umls\-similarity/
\&
\&  You may also contact us directly if you prefer :
\&
\&      Bridget T. McInnes: bthomson at cs.umn.edu 
\&
\&      Ted Pedersen : tpederse at d.umn.edu
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 2
\&  Bridget T McInnes <bthomson at cs.umn.edu>
\&   Ted Pedersen <tpederse at d.umn.edu>
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2004\-2011 by Bridget T McInnes, Serguei Pakhomov, Ying Liu 
and Ted Pedersen
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
