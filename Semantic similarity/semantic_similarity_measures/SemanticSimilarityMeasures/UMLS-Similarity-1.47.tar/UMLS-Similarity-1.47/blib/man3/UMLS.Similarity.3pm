.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "UMLS::Similarity 3"
.TH UMLS::Similarity 3 "2016-09-14" "perl v5.24.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
UMLS::Similarity \- A suite of Perl modules that implement a number 
of semantic similarity measures in order to calculate the similarity 
between two concepts in the UMLS. The measures use the UMLS\-Interface 
module to access the UMLS present in a mysql database.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use UMLS::Interface;
\& use UMLS::Similarity::lch;
\& use UMLS::Similarity::path;
\&
\& my $umls = UMLS::Interface\->new(); 
\& die "Unable to create UMLS::Interface object.\en" if(!$umls);
\&
\& my $lch = UMLS::Similarity::lch\->new($umls);
\& die "Unable to create measure object.\en" if(!$lch);
\&
\& my $path = UMLS::Similarity::path\->new($umls);
\& die "Unable to create measure object.\en" if(!$path);
\&
\& my $cui1 = "C0005767";
\& my $cui2 = "C0007634";
\&
\& $ts1 = $umls\->getTermList($cui1);
\& my $term1 = pop @{$ts1};
\&
\& $ts2 = $umls\->getTermList($cui2);
\& my $term2 = pop @{$ts2};
\&
\& my $lvalue = $lch\->getRelatedness($cui1, $cui2);
\&
\& my $pvalue = $path\->getRelatedness($cui1, $cui2);
\&
\& print "The lch similarity between $cui1 ($term1) and $cui2 ($term2) is $lvalue\en";
\&
\& print "The path similarity between $cui1 ($term1) and $cui2 ($term2) is $pvalue\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package consists of Perl modules along with supporting Perl
programs that implement the semantic relatedness measures described by
Leacock & Chodorow (1998), Wu & Palmer (1994), Nguyen and Al-Mubaid 
(2006), Rada, et. al. 1989, Patwardhan (2003), Lin (1988), Resnik (1996), 
Jiang & Conrath (1997), Patwardhan (2006), Banerjee and Pedersen (2003) 
and a simple path based measure.
.PP
The Perl modules are designed as objects with methods that take as
input two concepts. The semantic relatedness of these concepts is 
returned by these methods. A quantitative measure of the degree to
which two word senses are related has wide ranging applications in
numerous areas, such as word sense disambiguation, information
retrieval, etc. For example, in order to determine which sense of a
given word is being used in a particular context, the sense having the
highest relatedness with its context word senses is most likely to be
the sense being used. Similarly, in information retrieval, retrieving
documents containing highly related concepts are more likely to have
higher precision and recall values.
.PP
The following sections describe the organization of this software
package and how to use it. A few typical examples are given to help
clearly understand the usage of the modules and the supporting
utilities.
.SH "REFERENCING"
.IX Header "REFERENCING"
.Vb 3
\&    If you write a paper that has used UMLS\-Interface in some way, we\*(Aqd 
\&    certainly be grateful if you sent us a copy and referenced UMLS\-Interface. 
\&    We have a published paper that provides a suitable reference:
\&
\&    @inproceedings{McInnesPP09,
\&       title={{UMLS\-Interface and UMLS\-Similarity : Open Source 
\&               Software for Measuring Paths and Semantic Similarity}}, 
\&       author={McInnes, B.T. and Pedersen, T. and Pakhomov, S.V.}, 
\&       booktitle={Proceedings of the American Medical Informatics 
\&                  Association (AMIA) Symposium},
\&       year={2009}, 
\&       month={November}, 
\&       address={San Fransico, CA}
\&    }
\&
\&    This paper is also found in
\&    <http://www\-users.cs.umn.edu/~bthomson/publications/pubs.html>
\&    or
\&    <http://www.d.umn.edu/~tpederse/Pubs/amia09.pdf>
.Ve
.SH "CONTACT US"
.IX Header "CONTACT US"
.Vb 2
\&  If you have any trouble installing and using UMLS\-Similarity, 
\&  please contact us via the users mailing list :
\&
\&      umls\-similarity@yahoogroups.com
\&
\&  You can join this group by going to:
\&
\&      http://tech.groups.yahoo.com/group/umls\-similarity/
\&
\&  You may also contact us directly if you prefer :
\&
\&      Bridget T. McInnes: bthomson at cs.umn.edu 
\&
\&      Ted Pedersen : tpederse at d.umn.edu
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIUMLS::Interface\fR\|(1)
.PP
\&\fIUMLS::Similarity::lch\fR\|(3)
\&\fIUMLS::Similarity::path\fR\|(3)
\&\fIUMLS::Similarity::wup\fR\|(3) 
\&\fIUMLS::Similarity::nam\fR\|(3) 
\&\fIUMLS::Similarity::cdist\fR\|(3) 
\&\fIUMLS::Similarity::lin\fR\|(3) 
\&\fIUMLS::Similarity::res\fR\|(3)
\&\fIUMLS::Similarity::jcn\fR\|(3) 
\&\fIUMLS::Similarity::vector\fR\|(3) 
\&\fIUMLS::Similarity::random\fR\|(3)
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 5
\&  Bridget McInnes <bthomson at umn.edu>
\&  Siddharth Patwardhan <sidd at cs.utah.edu>
\&  Serguei Pakhomov <pakh0002 at umn.edu>
\&  Ted Pedersen <tpederse at d.umn.edu>
\&  Ying Liu <liux0935 at umn.edu>
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2004\-2011 by Bridget McInnes, Siddharth Patwardhan, 
Serguei Pakhomov, Ying Liu and Ted Pedersen
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
